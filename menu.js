/*
PROMPT:
create some HTML or Javascript code that adds the functionality of a menu to my existing php web page. it shall be optimized for mobile phones and uses bootstrap.
by default it shall be very compact and only very little shall be visible until the users clicks on the hamburger menu button. 

Ideally, I want to put your new code into a separate file. in the existing file, I only want to add a single line of code to add the functionality.

The menu items shall be generated from a array:
("geraete_verwaltung.php", "Geräte Verwaltung"),
("geraetetypen_verwaltung.php", "Gerätetypen Verwaltung"),
 ("durchgaenge.php", "Durchgänge Verwaltung")


on page creation, the active item shall be generated by setting the properties of the "a-tag"
          <a class="nav-link active" aria-current="page" href="#">
accordingly. the active item shall be found via the called URL.


----
Additional Notes:

<!-- In your PHP file, add this single line where you want the menu to load -->
  <script src="menu.js"></script>

Bootstrap Dependency:
Ensure that your project includes the proper Bootstrap CSS and JavaScript files. For example, in your <head> section you might add:
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
And just before the closing </body> tag:
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>


*/

(function() {
  // Define the menu items as an array of objects: each with href and label
  const menuItems = [
    { href: "riegen.php", label: "Riegen" },
    { href: "kari.php", label: "Kari-Wertungseingabe" },
    { href: "geraete_verwaltung.php", label: "Geräte Verwaltung" },
    { href: "geraetetypen_verwaltung.php", label: "Gerätetypen Verwaltung" },
    { href: "durchgaenge.php", label: "Durchgänge Verwaltung" },
    { href: "riegen_verwaltung.php", label: "Riegen Verwaltung" }, 
    { href: "durchgaenge_zuordnung.php", label: "Riegen <-> Geräte <-> Durchgänge Zuordnung" }, 
    { href: "wettkaempfe_verwaltung.php", label: "Wettkämpfe Verwaltung" }, 
    { href: "vereine_verwaltung.php", label: "Vereine Verwaltung" }, 
    { href: "turner_verwaltung.php", label: "Turner Verwaltung" }, 
    { href: "wertungen.php", label: "Wertungen Verwaltung" }
  ];

  // Get the current file name from the URL (ignoring any query parameters)
  const currentFile = window.location.pathname.split('/').pop();

  // Build the HTML for the Bootstrap navbar
  let navHtml = `
    <nav class="navbar navbar-expand-lg navbar-light bg-light">
      <div class="container-fluid">
        <a class="navbar-brand" href="#">Menu</a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent"
                aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
          <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarSupportedContent">
          <ul class="navbar-nav me-auto mb-2 mb-lg-0">
  `;

  // Loop over each menu item and add an "active" class if its href matches the current file.
  menuItems.forEach(item => {
    const activeClass = (item.href === currentFile) ? ' active' : '';
    navHtml += `
      <li class="nav-item">
        <a class="nav-link${activeClass}" aria-current="page" href="${item.href}">${item.label}</a>
      </li>
    `;
  });

  navHtml += `
          </ul>
        </div>
      </div>
    </nav>
  `;

  // Insert the navbar.
  // Option 1: If your PHP page has a placeholder element (e.g., <div id="navbar-container"></div>)
  const container = document.getElementById("navbar-container");
  if (container) {
    container.innerHTML = navHtml;
  } else {
    // Option 2: Prepend the navbar to the body if no container is found.
    document.body.insertAdjacentHTML("afterbegin", navHtml);
  }
  console.log(navHtml);
})();

